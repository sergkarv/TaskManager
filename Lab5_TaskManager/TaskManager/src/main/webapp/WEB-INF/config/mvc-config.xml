<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- context:component-scan This tag will scan @Component, @Repository, @Service, @Controller
         and also resolves @Autowired and @Qualifier -->
    <context:component-scan base-package="taskManager" />

    <!--
        mvc:annotation-driven configures Spring MVC annotations
        Support for validating @Controller inputs with @Valid, if a JSR-303 Provider is present on the classpath.
        HttpMessageConverter support for @RequestBody method parameters and @ResponseBody method return values
        from @RequestMapping or @ExceptionHandler methods.
     -->
    <mvc:annotation-driven/>

    <!-- activate @Transactional JPA annotation -->
    <tx:annotation-driven/>

    <!-- ViewResolver bean config for mapping strings to jsp views -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- File Upload bean config-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="200000000" />
    </bean>

    <!-- Static Resources Configuration (get access to static sources such as CSS and JavaScript files) -->
    <mvc:resources mapping="/static/**" location="/static/" />
    <!-- themes can be put in different folder such as
        <mvc:resources mapping="/resources/**" location="/resources/themeBlue" />
        <mvc:resources mapping="/resources/**" location="/resources/themeGreen" />
     -->

</beans>